version: '3.8'

services:
  redis:
    image: redis:7.0.11-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    command: ["sh", "-c", "redis-server --requirepass root"]
    ports:
      - "6379:6379"
    restart: always
    networks:
      - main_network

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - mongo_data:/data/db
    ports:
      - 27017:27017
    networks:
      - main_network

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_MONGODB_SERVER=mongo
    depends_on:
      - mongo
    networks:
      - main_network

  backend:
    image: backend
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && gunicorn backend.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/app/
    ports:
      - "8000:8000"
    env_file: ./backend/.env
    depends_on:
      - redis
      - mongo
    networks:
      - main_network

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app/
    command: sh -c "npm run build && npm start"
    environment:
      - API_URL=http://nginx/api/
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - main_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./backend/static:/usr/share/nginx/html/static
      - ./backend/media:/usr/share/nginx/html/media
    depends_on:
      - backend
      - frontend
    restart: always
    networks:
      - main_network

volumes:
  mongo_data:
  redis_data:

networks:
  main_network:
    driver: bridge